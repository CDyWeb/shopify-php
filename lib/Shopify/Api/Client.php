<?php

namespace Shopify\Api;

use Shopify\HttpClient;

class Client
{

    /**
     * the permanenet access token generated by Shopify
     * @var string
     */
    protected $accessToken;

    /**
     * the shared secret created by Shopify
     * @var string
     */
    protected $sharedSecret;

    /**
     * the http client used to make requests to the shopify api
     * @var HttpClient
     */
    protected $httpClient;

    /**
     * initialize the API client
     * @param HttpClient $client
     */
    public function __construct(HttpClient $client)
    {
        $this->httpClient = $client;
    }

    /**
     * set the permanent access token returned by Shopify API
     * @param string $token
     */
    public function setAccessToken($token)
    {
        $this->accessToken = $token;
    }

    /**
     * set the shared secret
     * @param string
     */
    public function setSharedSecret($secret)
    {
        $this->sharedSecret = $secret;
    }

    /**
     * generate the signature as required by shopify
     * @param array $params
     * @return string
     */
    public function generateSignature($params)
    {

        // Collect the URL parameters into an array of elements of the format
        // "$parameter_name=$parameter_value"

        $calculated = array();

        foreach ($params as $key => $value) {
            $calculated[] = $key . "=" . $value;
        }

        // Sort the key/value pairs in the array
        sort($calculated);

        // Join the array elements into a string
        $calculated = implode('', $calculated);

        // Final calculated_signature to compare against
        return md5($this->sharedSecret . $calculated);

    }

}
